process.executor = 'slurm'
process.errorStrategy = 'finish'


process {
      withName: trim {
      module = 'cutadapt/1.18-foss-2018b-python-2.7.15'
     cpus = {  8 * task.attempt }
      memory = { 16.GB * task.attempt }
     time = {  4.h * task.attempt }
      }
      withName: star_index {
      module = 'star/2.7.1a-foss-2018b'
      cpus = {  16 * task.attempt }
      memory = { 32.GB * task.attempt}
      time = {  4.h * task.attempt }
      }
      withName: star_align {
      module = 'star/2.7.1a-foss-2018b'
      cpus = {  8 * task.attempt }
      memory = { 16.GB * task.attempt }
      time = {  8.h * task.attempt }
      }
      
      withName: bamtosam {
        module= 'samtools/1.9-foss-2018b'
        cpus = {  8 * task.attempt }
      memory = { 16.GB * task.attempt }
      time = {  8.h * task.attempt }
       }

      withName: sam_by_size {
      module= 'samtools/1.9-foss-2018b'
      cpus = {  8 * task.attempt }
      memory = { 16.GB * task.attempt }
      time = {  8.h * task.attempt }
       }


      withName: bam2bw {
      module = 'deeptools/3.1.2-foss-2018b-python-2.7.15:samtools/1.9-foss-2018b'
      cpus = {  8 * task.attempt }
      memory = { 32.GB * task.attempt }
      time = {  8.h * task.attempt }
        }

     withName: readmapIO {
        cpus = {  8 * task.attempt }
      memory = { 32.GB * task.attempt }
      time = {  8.h * task.attempt }
       }

        withName: bedSort {
        cpus = {  4 * task.attempt }
        module = 'bedtools/2.27.1-foss-2018b'
        memory = { 84.GB * task.attempt }
        time = {  4.h * task.attempt }
       }

       withName: bedCollaps {
        cpus = {  4 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = {  4.h * task.attempt }
       }

       withName: hitnormalize {
        cpus = {  4 * task.attempt }
      memory = { 8.GB * task.attempt }
      time = {  2.h * task.attempt }
       }

       withName: sizeclass {
        cpus = {  2 * task.attempt }
      memory = { 4.GB * task.attempt }
      time = {  1.h * task.attempt }
       }

	withName: TEmap {
        cpus = {  4 * task.attempt }
        module = 'bedtools/2.27.1-foss-2018b'
        memory = { 4.GB * task.attempt }
        time = {  1.h * task.attempt }
       }

      withName: fastqc {
        module = 'fastqc/0.11.8-java-1.8'
        cpus = {  8 * task.attempt }
        memory = { 16.GB * task.attempt }
        time = {  8.h * task.attempt }
       }
       


}
